#test name: rpm-ostree-container-bootc
# for bootc/bootupd, remote and stateroot ostreecontainer options
# depends on the referenced ostree container being bootable

# Use the default settings.
%ksappend common/common_no_payload.ks

ostreecontainer --no-signature-verification --remote=test-remote --stateroot=test-stateroot --url=@KSTEST_OSTREECONTAINER_URL@

# Reboot the installed system.
reboot

# Validate on the first boot.
%ksappend validation/success_on_first_boot.ks

%post

# Checks after boot
cat >> /var/lib/extensions/kickstart-tests/usr/libexec/kickstart-test.sh << 'EOF'

# propagate any errors from %post validations
if [ -e /root/RESULT ]; then
    cat /root/RESULT
fi

# Check that state root 'test-stateroot' exists
if [ ! -d /ostree/deploy/test-stateroot ]; then
    echo "Couldn't find 'test-stateroot' stateroot"
fi

# Check that bootupd information is present
if [ ! -e /boot/bootupd-state.json ]; then
    echo "/boot/bootupd-state.json not found on installed system after booting"
fi

bootupctl --help &> /dev/null || echo "bootupctl command not available after booting"
bootc --help &> /dev/null || echo "bootc command not available after booting"

expected_url="@KSTEST_OSTREECONTAINER_URL@"
remote_url="$(ostree remote show-url test-remote)"
if [ ${?} -ne 0 ]; then
    echo "Couldn't list remote URL for 'test-remote'" >> /root/RESULT
fi

if [ "${remote_url}" != "${expected_url}" ]; then
    echo "Unexpected URL: ${remote_url}, expected ${expected_url}"" >> /root/RESULT
fi


EOF
%end

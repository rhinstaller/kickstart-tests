#version=DEVEL
#
# Test that a very minimal installation,
# generally targetting constainer base images,
# can be successfully done.
# - the --nocore option is used
# - no kernel is installed, thus
#   bootloader installation is disabled

%ksappend repos/default.ks
%ksappend common/common.ks
%ksappend users/default.ks
%ksappend network/default.ks

# Disable the boot loader.
bootloader --disabled

# Disable the NTP service.
keyboard us
lang en_US.UTF-8
timezone Etc/UTC --utc
timesource --ntp-disable

# Create only / with the ext4 filesystem type.
autopart --type=plain --fstype=ext4 --nohome --noboot --noswap
zerombr
clearpart --all

# Don't install kernel and systemd.
%packages --nocore
-kernel
-systemd
bash
-rpm
%end

%post
# (1) No kernel should be installed.
rpm -q kernel
if [[ $? == 0 ]]; then
    echo '*** No kernel package should have been installed' > /root/RESULT
    exit 1
fi

# (2) No bootloader package should be installed.
count=$(rpm -qa grub2\* | wc -l)
if [[ $count -gt 0 ]]; then
    echo '*** No bootloader package should have been installed' > /root/RESULT
    exit 1
fi

# (3) No authconfig or firewall packages should be installed.
count=$(rpm -qa authselect\* authconfig\* firewall\* | wc -l)
if [[ $count -gt 0 ]]; then
    echo '*** No authconfig or firewall packages should have been installed' > /root/RESULT
    exit 1
fi

# (4) Not too much other stuff should be installed - the packages we asked for,
# whatever are dependencies of it, and whatever anaconda decided is needed for
# our storage config.
count=$(rpm -qa \* | wc -l)
if [[ $count -gt 200 ]]; then
    echo '*** Too much stuff was installed' > /root/RESULT
    exit 1
fi

%ksappend validation/success_if_result_empty.ks

%end

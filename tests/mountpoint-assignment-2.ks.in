#version=DEVEL

%ksappend repos/default.ks
network --bootproto=dhcp
bootloader --timeout=1

mount /dev/vda1 /boot
mount /dev/vda2 / --reformat=ext4 --mkfsoptions="-L root-test-label"
mount /dev/vda3 /home --mountoptions="nofail"
mount /dev/vda4 none

keyboard us
lang en_US.UTF-8
timezone America/New_York --utc
rootpw testcase
shutdown

%packages
%end

%pre

# Do the partitioning here.
parted /dev/vda mklabel msdos
sleep 1

parted --align=none /dev/vda mkpart primary 512K 1.5G
sleep 1
mkfs.ext2 /dev/vda1

parted --align=none /dev/vda mkpart primary 1.5G 8G
sleep 1
mkfs.ext2 /dev/vda2

parted --align=none /dev/vda mkpart primary 8G 9G
sleep 1
mkfs.ext4 /dev/vda3

parted --align=none /dev/vda mkpart primary 9G 10G
sleep 1
mkswap /dev/vda4
%end

%post
# Check the existence of mount points.
check_mount_point() {
    local device="$1" mount_point="$2" fstype="$3" options="$4" label="$5"

    found_mount_point="$( lsblk $device -o MOUNTPOINT --noheadings )"

    if [ "$mount_point" != "$found_mount_point" ]; then
        echo "${device} shouldn't be mounted at ${found_mount_point}" >>/root/RESULT
    fi

    found_fstype="$( lsblk $device -o FSTYPE --noheadings )"

    if [ "$fstype" != "$found_fstype" ]; then
        echo "${device} shouldn't have fstype ${found_fstype}" >>/root/RESULT
    fi

    found_label="$( lsblk $device -o LABEL --noheadings )"

    if [ "$label" != "$found_label" ]; then
        echo "${device} shouldn't have label ${found_label}" >>/root/RESULT
    fi

    found_options="$( findmnt --fstab $device -o OPTIONS --noheadings )"

    if [ "$options" != "$found_options" ]; then
        echo "${device} shouldn't have options ${found_options}" >>/root/RESULT
    fi

}

check_mount_point "/dev/vda1" "/boot"  "ext2" "defaults" ""
check_mount_point "/dev/vda2" "/"      "ext4" "defaults" "root-test-label"
check_mount_point "/dev/vda3" "/home"  "ext4" "nofail"   ""
check_mount_point "/dev/vda4" "[SWAP]" "swap" ""         ""

if [ ! -e /root/RESULT ]; then
    echo SUCCESS >/root/RESULT
fi

%end
